import type { ApiDataType } from './appTypes';

// Mapování REST endpointů na URL dokumentace
export const endpointDocUrls: Record<string, string> = {
  'GET /accessPoint':
    'https://ppl-cpl-api.apidog.io/seznam-v%C3%BDdejn%C3%ADch-m%C3%ADst-13465887e0',
  'GET /addressWhisper':
    'https://ppl-cpl-api.apidog.io/na%C5%A1ept%C3%A1va%C4%8D-adres-13465888e0',
  'GET /info': 'https://ppl-cpl-api.apidog.io/info-13465906e0',
  'GET /order':
    'https://ppl-cpl-api.apidog.io/z%C3%ADsk%C3%A1n%C3%AD-informace-o-objedn%C3%A1vce-p%C5%99epravy-13465909e0',
  'POST /order/batch':
    'https://ppl-cpl-api.apidog.io/slou%C5%BE%C3%AD-k-vytvo%C5%99en%C3%AD-objedn%C3%A1vky-odpov%C4%9B%C4%8F-je-v-header-location-13465910e0',
  'GET /order/batch/{batchId}':
    'https://ppl-cpl-api.apidog.io/z%C3%ADskan%C3%AD-stavu-objednávky-13465911e0',
  'POST /order/cancel':
    'https://ppl-cpl-api.apidog.io/zru%C5%A1en%C3%AD-objedn%C3%A1n%C3%AD-svozu-nebo-bal%C3%ADku-z-libovoln%C3%A9-adresy-13465912e0',
  'GET /shipment':
    'https://ppl-cpl-api.apidog.io/slou%C5%BE%C3%AD-k-z%C3%ADsk%C3%A1n%C3%AD-informac%C3%AD-trackingu-k-z%C3%A1silce-13465913e0',
  'POST /shipment/batch':
    'https://ppl-cpl-api.apidog.io/vytvo%C5%99en%C3%AD-z%C3%A1silky-13465914e0',
  'PUT /shipment/batch/{batchId}':
    'https://ppl-cpl-api.apidog.io/slou%C5%BE%C3%AD-k-%C3%BAprav%C4%9B-v%C3%BDstupn%C3%ADho-form%C3%A1tu-%C5%A1t%C3%ADtku-13465915e0',
  'GET /shipment/batch/{batchId}': 'Získání stavu importu zásilky - CPL API',
  'GET /shipment/batch/{batchId}/label': 'Získání etikety - CPL API',
  'POST /shipment/{shipmentNumber}/cancel': 'storno zásilky - CPL API',
  'POST /shipment/{shipmentNumber}/redirect': 'úprava kontaktu - CPL API',
  'GET /versionInformation': 'informace o novinkách - CPL API',
  'auth-login': 'https://ppl-cpl-api.apidog.io/autorizace-13465886e0',
};

// Definice dat pro API porovnání
export const apiData: ApiDataType = {
  // Překlady pro UI
  translations: {
    cs: {
      // Hlavička
      title: 'Porovnání myAPI (SOAP) vs CPL API (REST) & Převodník',
      // Záložky
      tabEndpoints: 'Endpointy',
      tabFields: 'Pole',
      tabDifferences: 'Rozdíly',
      tabExamples: 'Příklady',
      tabFaq: 'FAQ',
      tabConverter: 'Převodník',
      // Vyhledávání
      searchPlaceholder: 'Vyhledat v záložce',
      // Tabulky a obsah
      soapColumn: 'myAPI (SOAP)',
      restColumn: 'CPL API (REST)',
      categoryColumn: 'Kategorie',
      differencesColumn: 'Klíčové rozdíly',
      detailsButton: 'Detail',
      noResultsFound: 'Nebyly nalezeny žádné odpovídající záznamy pro',
      fieldComparison: 'Porovnání polí',
      selectEndpointFirst:
        'Pro zobrazení porovnání polí vyberte nejprve operaci v záložce',
      mappingNotFound: 'Mapování nebylo nalezeno.',
      // Pole v tabulce
      dataType: 'Datový typ',
      required: 'Povinné',
      maxLength: 'Max. délka',
      description: 'Popis',
      yes: 'Ano',
      no: 'Ne',
      // Vysvětlivky
      legendTitle: 'Vysvětlivky:',
      legendYellowRow: 'Žlutý řádek = pole s rozdíly',
      legendRedText: 'Červený text = konkrétní rozdíl',
      legendArrow: 'Šipka = změna SOAP → REST',
      // Rozdíly
      // Příklady
      examplesTitle: 'Příklady komplexních struktur API',
      examplesDesc:
        'Ukázky složitějších REST API struktur, které je obtížné konvertovat z/do SOAP formátu.',
      complexity: 'Složitost:',
      complexityHigh: 'Vysoká',
      complexityMedium: 'Střední',
      complexityLow: 'Nízká',
      copy: 'Kopírovat',
      copyCode: 'Kopírovat kód',
      // FAQ
      faqTitle: 'Často kladené dotazy (FAQ)',
      faqDesc: 'Odpovědi na běžné otázky týkající se CPL API a migrace.',
      // Převodník
      converterTitle: 'Experimentální SOAP → REST Převodník',
      supportedOperations: 'Podporované operace',
      converterSettings: 'Nastavení převodníku',
      baseUrl: 'Základní URL pro CPL API:',
      converterWarning:
        'Upozornění: Jedná se o zjednodušený převodník pro demonstrační účely. Výsledek nemusí být 100% přesný nebo kompletní, zejména u složitějších struktur.',
      conversionSuccess: 'Konverze úspěšná',
      operationConverted: 'SOAP operace byla převedena na REST',
      method: 'Metoda:',
      endpoint: 'Endpoint:',
      copyEndpoint: 'Kopírovat celý endpoint',
      soapRequest: 'SOAP XML Požadavek',
      reset: 'Resetovat',
      enterSoapXml: 'Vložte SOAP XML požadavek...',
      transform: 'Transformovat na REST',
      restEquivalent: 'REST Ekvivalent',
      resultWillAppear: 'Transformovaný REST JSON výsledek se zobrazí zde.',
      enterSoapAndClick:
        'Vložte SOAP XML a klikněte na tlačítko "Transformovat".',
      conversionError: 'Chyba při konverzi',
      jsonBody: 'Body (JSON):',
      copyJson: 'Kopírovat JSON',
      converterGetRequestNullBodyInfo:
        'Tělo (Body) REST požadavku je pro tuto GET operaci prázdné (`null`). Vstupní data z těla původního SOAP požadavku byla převedena na parametry přímo v URL adrese REST endpointu (tzv. query parametry).',
      converterMissingRequiredFieldSimple: 'Chybí povinné pole:',
      converterRequiredInRestSimple: 'V REST API je vyžadováno.',
      converterRequiredPlaceholder: 'NUTNÉ DOPLNIT V REST',
      converterMissingFieldName: 'chybějící', // Nebo 'Nespecifikováno:'
      senderName: 'jméno odesílatele',
      recipientPhone: 'telefon příjemce',
      recipientEmail: 'email příjemce',
      converterErrorProcessing: 'Chyba při zpracování',
      converterUnsupportedOperation: 'Nepodporovaná nebo nerozpoznaná operace.',
      converterUnimplementedOperation:
        'Transformace pro tuto operaci ještě není implementována.',
      converterMissingShipmentNumber:
        'Chybí povinné číslo zásilky (PackNumber).',
      converterMissingContactOrNoteForUpdate:
        'Chybí kontaktní údaje nebo poznámka pro aktualizaci.',
      converterMissingOrderIdentification:
        'Pro zrušení objednávky je vyžadován buď OrderNumber nebo CustomerReference.',
      converterIgnoredParameter:
        'Následující parametr SOAP nemá přímý ekvivalent v REST a bude ignorován:',

      // Doporučení pro migraci
      migrationRecommendations: 'Doporučení pro migraci',
      authMigration: '1. Autentizace',
      authMigrationDesc: [
        'Implementujte OAuth2/JWT (client_id, client_secret, Bearer token).',
        'Nahraďte SOAP Auth element voláním endpointu pro získání tokenu.',
      ],
      requestsMigration: '2. Požadavky a odpovědi',
      requestsMigrationDesc: [
        'Přejděte z XML na JSON.',
        'Změňte názvy polí z PascalCase na camelCase.',
        'Ověřte a implementujte nové povinné pole a délková omezení v REST API.',
        'Zpracovávejte HTTP stavové kódy a JSON chybové objekty místo SOAP Faults.',
      ],
      endpointsMigration: '3. Endpointy a operace',
      endpointsMigrationDesc: [
        'Mapujte SOAP operace na odpovídající REST endpointy a HTTP metody (GET, POST, PUT, atd.).',
        'Aktualizujte volání API dle REST architektury (resource-oriented URLs).',
        'Sjednoťte volání číselníků na /codelist/* endpointy.',
      ],
    },
    en: {
      // Header
      title: 'myAPI (SOAP) vs CPL API (REST) Comparison & Converter',
      // Tabs
      tabEndpoints: 'Endpoints',
      tabFields: 'Fields',
      tabDifferences: 'Differences',
      tabExamples: 'Examples',
      tabFaq: 'FAQ',
      tabConverter: 'Converter',
      // Search
      searchPlaceholder: 'Search in the tab',
      // Tables & content
      soapColumn: 'myAPI (SOAP)',
      restColumn: 'CPL API (REST)',
      categoryColumn: 'Category',
      differencesColumn: 'Key Differences',
      detailsButton: 'Details',
      noResultsFound: 'No matching records found for',
      fieldComparison: 'Field Comparison',
      selectEndpointFirst:
        'To view field comparison, first select an operation in the',
      mappingNotFound: 'Mapping not found.',
      // Table fields
      dataType: 'Data Type',
      required: 'Required',
      maxLength: 'Max. Length',
      description: 'Description',
      yes: 'Yes',
      no: 'No',
      // Legend
      legendTitle: 'Legend:',
      legendYellowRow: 'Yellow row = fields with differences',
      legendRedText: 'Red text = specific difference',
      legendArrow: 'Arrow = change SOAP → REST',
      // Differences
      // Examples
      examplesTitle: 'Complex API Structure Examples',
      examplesDesc:
        'Examples of complex REST API structures that are difficult to convert from/to SOAP format.',
      complexity: 'Complexity:',
      complexityHigh: 'High',
      complexityMedium: 'Medium',
      complexityLow: 'Low',
      copy: 'Copy',
      copyCode: 'Copy code',
      // FAQ
      faqTitle: 'Frequently Asked Questions (FAQ)',
      faqDesc: 'Answers to common questions about CPL API and migration.',
      // Converter
      converterTitle: 'Experimental SOAP → REST Converter',
      supportedOperations: 'Supported Operations',
      converterSettings: 'Converter Settings',
      baseUrl: 'Base URL for CPL API:',
      converterWarning:
        'Warning: This is a simplified converter for demonstration purposes. The result may not be 100% accurate or complete, especially for complex structures.',
      conversionSuccess: 'Conversion Successful',
      operationConverted: 'SOAP operation has been converted to REST',
      method: 'Method:',
      endpoint: 'Endpoint:',
      copyEndpoint: 'Copy full endpoint',
      soapRequest: 'SOAP XML Request',
      reset: 'Reset',
      enterSoapXml: 'Enter SOAP XML request...',
      transform: 'Transform to REST',
      restEquivalent: 'REST Equivalent',
      resultWillAppear: 'Transformed REST JSON result will appear here.',
      enterSoapAndClick: 'Enter SOAP XML and click on the "Transform" button.',
      conversionError: 'Conversion Error',
      jsonBody: 'Body (JSON):',
      copyJson: 'Copy JSON',
      converterGetRequestNullBodyInfo:
        "The REST request body is empty (`null`) for this GET operation. Input data from the original SOAP request's body has been converted into parameters directly in the REST endpoint's URL (query parameters).",
      converterMissingRequiredFieldSimple: 'Missing required field:',
      converterRequiredInRestSimple: 'Required in REST API.',
      converterRequiredPlaceholder: 'REQUIRED IN REST',
      converterMissingFieldName: 'missing', // Or 'Unspecified:'
      senderName: 'sender name',
      recipientPhone: 'recipient phone',
      recipientEmail: 'recipient email',
      converterErrorProcessing: 'Error processing',
      converterUnsupportedOperation: 'Unsupported or unrecognized operation.',
      converterUnimplementedOperation:
        'Transformation for this operation is not yet implemented.',
      converterMissingShipmentNumber:
        'Missing required shipment number (PackNumber).',
      converterMissingContactOrNoteForUpdate:
        'Missing contact details or note for update.',
      converterMissingOrderIdentification:
        'OrderNumber or CustomerReference is required to cancel the order.',
      converterIgnoredParameter:
        'The following SOAP parameter has no direct REST equivalent and will be ignored:',
      // Migration recommendations
      migrationRecommendations: 'Migration Recommendations',
      authMigration: '1. Authentication',
      authMigrationDesc: [
        'Implement OAuth2/JWT (client_id, client_secret, Bearer token).',
        'Replace SOAP Auth element with token endpoint call.',
      ],
      requestsMigration: '2. Requests and Responses',
      requestsMigrationDesc: [
        'Switch from XML to JSON.',
        'Change field names from PascalCase to camelCase.',
        'Verify and implement new required fields and length constraints in REST API.',
        'Process HTTP status codes and JSON error objects instead of SOAP Faults.',
      ],
      endpointsMigration: '3. Endpoints and Operations',
      endpointsMigrationDesc: [
        'Map SOAP operations to corresponding REST endpoints and HTTP methods (GET, POST, PUT, etc.).',
        'Update API calls according to REST architecture (resource-oriented URLs).',
        'Unify codelist calls to /codelist/* endpoints.',
      ],
    },
  },
  categories: [
    {
      id: 'shipment',
      name: 'Zásilky',
      nameEn: 'Shipments',
      description: 'Vytvoření a sledování zásilek',
      descriptionEn: 'Creating and tracking shipments',
    },
    {
      id: 'order',
      name: 'Objednávky',
      nameEn: 'Orders',
      description: 'Správa objednávek přepravy',
      descriptionEn: 'Transport order management',
    },
    {
      id: 'accesspoint',
      name: 'Výdejní místa',
      nameEn: 'Access Points',
      description: 'Práce s výdejními místy',
      descriptionEn: 'Working with access points',
    },
    {
      id: 'address',
      name: 'Adresy',
      nameEn: 'Addresses',
      description: 'Služby pro práci s adresami',
      descriptionEn: 'Address-related services',
    },
    {
      id: 'info',
      name: 'Informace',
      nameEn: 'Information',
      description: 'Obecné informace o API',
      descriptionEn: 'General API information',
    },
    {
      id: 'version',
      name: 'Verze',
      nameEn: 'Version',
      description: 'Informace o verzi API',
      descriptionEn: 'API version information',
    },
    {
      id: 'auth',
      name: 'Autentizace',
      nameEn: 'Authentication',
      description: 'Přihlášení a autorizace',
      descriptionEn: 'Login and authorization',
    },
  ],
  endpointMappings: [
    {
      category: 'shipment',
      soapOperation: 'CreatePackages',
      soapDescription: 'Vloží nové zásilky pro import a vytvoří štítky',
      restEndpoint: 'POST /shipment/batch',
      restDescription: 'Slouží k vytvoření zásilky a získání štítků',
      mainDifferences:
        'REST API poskytuje více validačních pravidel, má jiný formát odpovědi a používá camelCase',
      mainDifferencesEn:
        'REST API provides more validation rules, has a different response format and uses camelCase',
      docUrl: endpointDocUrls['POST /shipment/batch'],
    },
    {
      category: 'shipment',
      soapOperation: 'GetPackages',
      soapDescription: 'Vrátí seznam zásilek dle zadaného filtru',
      restEndpoint: 'GET /shipment',
      restDescription: 'Slouží k získání informací (trackingu) k zásilce',
      mainDifferences:
        'REST API používá query parametry místo komplexního filtru v těle',
      mainDifferencesEn:
        'REST API uses query parameters instead of a complex filter in the body',
      docUrl: endpointDocUrls['GET /shipment'],
    },
    {
      category: 'shipment',
      soapOperation: 'CancelPackage',
      soapDescription: 'Zrušení zásilky',
      restEndpoint: 'POST /shipment/{shipmentNumber}/cancel',
      restDescription: 'Možnost stornovat balík, pokud nebyl fyzicky poslán',
      mainDifferences: 'REST API využívá URL parametr pro identifikaci zásilky',
      mainDifferencesEn: 'REST API uses URL parameter to identify the shipment',
      docUrl: endpointDocUrls['POST /shipment/{shipmentNumber}/cancel'],
    },
    {
      category: 'shipment',
      soapOperation: 'UpdatePackage',
      soapDescription: 'Aktualizace údajů zásilky',
      restEndpoint: 'POST /shipment/{shipmentNumber}/redirect',
      restDescription: 'Možnost doplnit informace k balíku',
      mainDifferences: 'REST API poskytuje omezenější možnosti aktualizace',
      mainDifferencesEn: 'REST API provides more limited update options',
      docUrl: endpointDocUrls['POST /shipment/{shipmentNumber}/redirect'],
    },
    // Objednávky
    {
      category: 'order',
      soapOperation: 'CreateOrders',
      soapDescription:
        'Vytvoří objednávky přepravy s doručením na adresu příjemce',
      restEndpoint: 'POST /order/batch',
      restDescription: 'Slouží k vytvoření objednávky doručení',
      mainDifferences:
        'V REST API je typ objednávky určen parametrem orderType="transportOrder" a obsahuje údaje o příjemci',
      mainDifferencesEn:
        'In REST API, the order type is defined by the orderType="transportOrder" parameter and contains recipient data',
      docUrl: endpointDocUrls['POST /order/batch'],
    },
    {
      category: 'order',
      soapOperation: 'CreatePickupOrders',
      soapDescription: 'Vytvoří objednávky svozu bez doručení',
      restEndpoint: 'POST /order/batch',
      restDescription: 'Slouží k vytvoření objednávky svozu',
      mainDifferences:
        'V REST API je typ objednávky určen parametrem orderType="collectionOrder" a NEOBSAHUJE údaje o příjemci',
      mainDifferencesEn:
        'In REST API, the order type is defined by the orderType="collectionOrder" parameter and does NOT contain recipient data',
      docUrl: endpointDocUrls['POST /order/batch'],
    },
    {
      category: 'order',
      soapOperation: 'GetOrders',
      soapDescription: 'Vrátí seznam objednávek dle zadaného filtru',
      restEndpoint: 'GET /order',
      restDescription: 'Sledování stavu objednávek',
      mainDifferences:
        'REST API používá query parametry místo komplexního filtru v těle',
      mainDifferencesEn:
        'REST API uses query parameters instead of a complex filter in the body',
      docUrl: endpointDocUrls['GET /order'],
    },
    {
      category: 'order',
      soapOperation: 'CancelOrder',
      soapDescription: 'Zrušení objednávky',
      restEndpoint: 'POST /order/cancel',
      restDescription: 'Zrušení objednání svozu nebo balíku z libovolné adresy',
      mainDifferences:
        'REST API používá query parametry pro identifikaci objednávky',
      mainDifferencesEn: 'REST API uses query parameters to identify the order',
      docUrl: endpointDocUrls['POST /order/cancel'],
    },
    // Výdejní místa
    {
      category: 'accesspoint',
      soapOperation: 'GetParcelShops',
      soapDescription: 'Vrátí seznam ParcelShopů',
      restEndpoint: 'GET /accessPoint',
      restDescription: 'Seznam výdejních míst',
      mainDifferences:
        'REST API má rozšířené možnosti filtrování a detailnější strukturu',
      mainDifferencesEn:
        'REST API has expanded filtering options and a more detailed structure',
      docUrl: endpointDocUrls['GET /accessPoint'],
    },
    {
      category: 'address',
      soapOperation: 'N/A',
      soapDescription: 'Nepodporováno v SOAP',
      restEndpoint: 'GET /addressWhisper',
      restDescription: 'Našeptávač adres',
      mainDifferences: 'Dostupné pouze v REST API',
      mainDifferencesEn: 'Available only in REST API',
      docUrl: endpointDocUrls['GET /addressWhisper'],
    },
    {
      category: 'info',
      soapOperation: 'N/A',
      soapDescription: 'Nepodporováno v SOAP',
      restEndpoint: 'GET /info',
      restDescription: 'Info',
      mainDifferences: 'Dostupné pouze v REST API',
      mainDifferencesEn: 'Available only in REST API',
      docUrl: endpointDocUrls['GET /info'],
    },
    {
      category: 'version',
      soapOperation: 'N/A',
      soapDescription: 'Nepodporováno v SOAP',
      restEndpoint: 'GET /versionInformation',
      restDescription: 'Informace o novinkách',
      mainDifferences: 'Dostupné pouze v REST API',
      mainDifferencesEn: 'Available only in REST API',
      docUrl: endpointDocUrls['GET /versionInformation'],
    },
    {
      category: 'auth',
      soapOperation: 'Login',
      soapDescription: 'Vrátí autentikační ticket',
      restEndpoint: 'OAuth2/JWT autentizace',
      restDescription: 'Standardní autentizace pomocí Bearer tokenu',
      mainDifferences:
        'REST API používá standardní OAuth2/JWT mechanismus místo vlastního',
      mainDifferencesEn:
        'REST API uses standard OAuth2/JWT mechanism instead of proprietary one',
      docUrl: endpointDocUrls['auth-login'] || '',
    },
  ],
  fieldMappings: {
    'shipment-create': {
      title: 'Vytvoření zásilky',
      titleEn: 'Create Shipment',
      description: 'Porovnání struktur pro vytvoření zásilky',
      descriptionEn: 'Comparison of structures for creating a shipment',
      soapOperation: 'CreatePackages',
      restEndpoint: 'POST /shipment/batch',
      docUrl: endpointDocUrls['POST /shipment/batch'],
      fields: [
        {
          soapField: 'PackNumber',
          restField: 'shipmentNumber',
          soapType: 'string',
          restType: 'string',
          soapRequired: false,
          restRequired: false,
          soapLength: 'Neomezeno',
          restLength: 'Neomezeno',
          notes: 'Číslo zásilky (systémové)',
          notesEn: 'Shipment number (system)',
        },
        {
          soapField: 'PackRef',
          restField: 'referenceId',
          soapType: 'string',
          restType: 'string',
          soapRequired: false,
          restRequired: true,
          soapLength: '50',
          restLength: '50',
          notes: 'Číslo zásilky (zákaznické)',
          notesEn: 'Shipment number (customer reference)',
        },
        {
          soapField: 'PackProductType',
          restField: 'productType',
          soapType: 'string',
          restType: 'string',
          soapRequired: true,
          restRequired: true,
          soapLength: 'Neomezeno',
          restLength: 'Neomezeno',
          notes: 'Typ produktu (např. BUSS)',
          notesEn: 'Product type (e.g. BUSS)',
        },
        {
          soapField: 'Note',
          restField: 'note',
          soapType: 'string',
          restType: 'string',
          soapRequired: false,
          restRequired: false,
          soapLength: 'Neomezeno',
          restLength: '300',
          notes: 'Poznámka k zásilce',
          notesEn: 'Shipment note',
        },
        {
          soapField: 'Weight',
          restField: 'weight',
          soapType: 'string',
          restType: 'number',
          soapRequired: true,
          restRequired: false,
          soapLength: 'Neomezeno',
          restLength: 'N/A',
          notes: 'Hmotnost zásilky',
          notesEn: 'Shipment weight',
        },
        {
          soapField: 'DepoCode',
          restField: 'depot',
          soapType: 'string',
          restType: 'string',
          soapRequired: false,
          restRequired: false,
          soapLength: 'Neomezeno',
          restLength: '2',
          notes: 'Kód depa',
          notesEn: 'Depot code',
        },
        {
          soapField: 'Sender.Name',
          restField: 'sender.name',
          soapType: 'string',
          restType: 'string',
          soapRequired: true,
          restRequired: false,
          soapLength: 'Neomezeno',
          restLength: '50',
          notes: 'Jméno odesílatele',
          notesEn: 'Sender name',
        },
        {
          soapField: 'Sender.Name2',
          restField: 'sender.name2',
          soapType: 'string',
          restType: 'string',
          soapRequired: false,
          restRequired: false,
          soapLength: 'Neomezeno',
          restLength: '50',
          notes: 'Doplňující jméno odesílatele',
          notesEn: 'Sender additional name',
        },
        {
          soapField: 'Sender.Street',
          restField: 'sender.street',
          soapType: 'string',
          restType: 'string',
          soapRequired: true,
          restRequired: false,
          soapLength: 'Neomezeno',
          restLength: '60',
          notes: 'Ulice odesílatele',
          notesEn: 'Sender street',
        },
        {
          soapField: 'Sender.City',
          restField: 'sender.city',
          soapType: 'string',
          restType: 'string',
          soapRequired: true,
          restRequired: false,
          soapLength: 'Neomezeno',
          restLength: '50',
          notes: 'Město odesílatele',
          notesEn: 'Sender city',
        },
        {
          soapField: 'Sender.ZipCode',
          restField: 'sender.zipCode',
          soapType: 'string',
          restType: 'string',
          soapRequired: true,
          restRequired: false,
          soapLength: 'Neomezeno',
          restLength: '10',
          notes: 'PSČ odesílatele',
          notesEn: 'Sender ZIP code',
        },
        {
          soapField: 'Sender.Country',
          restField: 'sender.country',
          soapType: 'string',
          restType: 'string',
          soapRequired: true,
          restRequired: false,
          soapLength: 'Neomezeno',
          restLength: '2',
          notes: 'Země odesílatele (ISO kód)',
          notesEn: 'Sender country (ISO code)',
        },
        {
          soapField: 'Sender.Contact',
          restField: 'sender.contact',
          soapType: 'string',
          restType: 'string',
          soapRequired: false,
          restRequired: false,
          soapLength: 'Neomezeno',
          restLength: '50',
          notes: 'Kontaktní osoba odesílatele',
          notesEn: 'Sender contact person',
        },
        {
          soapField: 'Sender.Phone',
          restField: 'sender.phone',
          soapType: 'string',
          restType: 'string',
          soapRequired: false,
          restRequired: false,
          soapLength: 'Neomezeno',
          restLength: '50',
          notes: 'Telefon odesílatele',
          notesEn: 'Sender phone',
        },
        {
          soapField: 'Sender.Email',
          restField: 'sender.email',
          soapType: 'string',
          restType: 'string',
          soapRequired: false,
          restRequired: false,
          soapLength: 'Neomezeno',
          restLength: '100',
          notes: 'Email odesílatele',
          notesEn: 'Sender email',
        },
        {
          soapField: 'Recipient.Name',
          restField: 'recipient.name',
          soapType: 'string',
          restType: 'string',
          soapRequired: true,
          restRequired: true,
          soapLength: 'Neomezeno',
          restLength: '50',
          notes: 'Jméno příjemce',
          notesEn: 'Recipient name',
        },
        {
          soapField: 'Recipient.Name2',
          restField: 'recipient.name2',
          soapType: 'string',
          restType: 'string',
          soapRequired: false,
          restRequired: false,
          soapLength: 'Neomezeno',
          restLength: '50',
          notes: 'Doplňující jméno příjemce',
          notesEn: 'Recipient additional name',
        },
        {
          soapField: 'Recipient.Street',
          restField: 'recipient.street',
          soapType: 'string',
          restType: 'string',
          soapRequired: true,
          restRequired: true,
          soapLength: 'Neomezeno',
          restLength: '60',
          notes: 'Ulice příjemce',
          notesEn: 'Recipient street',
        },
        {
          soapField: 'Recipient.City',
          restField: 'recipient.city',
          soapType: 'string',
          restType: 'string',
          soapRequired: true,
          restRequired: true,
          soapLength: 'Neomezeno',
          restLength: '50',
          notes: 'Město příjemce',
          notesEn: 'Recipient city',
        },
        {
          soapField: 'Recipient.ZipCode',
          restField: 'recipient.zipCode',
          soapType: 'string',
          restType: 'string',
          soapRequired: true,
          restRequired: true,
          soapLength: 'Neomezeno',
          restLength: '10',
          notes: 'PSČ příjemce',
          notesEn: 'Recipient ZIP code',
        },
        {
          soapField: 'Recipient.Country',
          restField: 'recipient.country',
          soapType: 'string',
          restType: 'string',
          soapRequired: true,
          restRequired: true,
          soapLength: 'Neomezeno',
          restLength: '2',
          notes: 'Země příjemce (ISO kód)',
          notesEn: 'Recipient country (ISO code)',
        },
        {
          soapField: 'Recipient.Contact',
          restField: 'recipient.contact',
          soapType: 'string',
          restType: 'string',
          soapRequired: false,
          restRequired: false,
          soapLength: 'Neomezeno',
          restLength: '50',
          notes: 'Kontaktní osoba příjemce',
          notesEn: 'Recipient contact person',
        },
        {
          soapField: 'Recipient.Phone',
          restField: 'recipient.phone',
          soapType: 'string',
          restType: 'string',
          soapRequired: false,
          restRequired: true,
          soapLength: 'Neomezeno',
          restLength: '50',
          notes: 'Telefon příjemce (v REST povinný)',
          notesEn: 'Recipient phone (required in REST)',
        },
        {
          soapField: 'Recipient.Email',
          restField: 'recipient.email',
          soapType: 'string',
          restType: 'string',
          soapRequired: false,
          restRequired: true,
          soapLength: 'Neomezeno',
          restLength: '100',
          notes: 'Email příjemce (v REST povinný)',
          notesEn: 'Recipient email (required in REST)',
        },
        {
          soapField: 'PaymentInfo.CodCurrency',
          restField: 'cashOnDelivery.codCurrency',
          soapType: 'string',
          restType: 'string',
          soapRequired: false,
          restRequired: false,
          soapLength: 'Neomezeno',
          restLength: '3',
          notes: 'Měna dobírky',
          notesEn: 'COD currency',
        },
        {
          soapField: 'PaymentInfo.CodPrice',
          restField: 'cashOnDelivery.codPrice',
          soapType: 'string',
          restType: 'number',
          soapRequired: false,
          restRequired: false,
          soapLength: 'Neomezeno',
          restLength: 'N/A',
          notes: 'Částka dobírky',
          notesEn: 'COD amount',
        },
        {
          soapField: 'PaymentInfo.CodVarSym',
          restField: 'cashOnDelivery.codVarSym',
          soapType: 'string',
          restType: 'string',
          soapRequired: false,
          restRequired: false,
          soapLength: 'Neomezeno',
          restLength: '10',
          notes: 'Variabilní symbol dobírky',
          notesEn: 'COD variable symbol',
        },
        {
          soapField: 'SpecDelivery.ParcelShopCode',
          restField: 'specificDelivery.parcelShopCode',
          soapType: 'string',
          restType: 'string',
          soapRequired: false,
          restRequired: false,
          soapLength: 'Neomezeno',
          restLength: '20',
          notes: 'Kód výdejního místa (ParcelShopu)',
          notesEn: 'Parcel shop code',
        },
        {
          soapField: 'PackagesExtNums.ExtNumber',
          restField: 'externalNumbers[].externalNumber',
          soapType: 'string',
          restType: 'string',
          soapRequired: false,
          restRequired: false,
          soapLength: 'Neomezeno',
          restLength: '50',
          notes: 'Externí číslo (REST: nutno specifikovat i code např. CUST)',
          notesEn: 'External number (REST: code must be specified, e.g. CUST)',
        },
        {
          soapField: 'AgeVerification',
          restField: 'services[].code',
          soapType: 'boolean',
          restType: 'string',
          soapRequired: false,
          restRequired: false,
          soapLength: 'N/A',
          restLength: 'Neomezeno',
          notes: 'Kontrola věku (REST: hodnota "AGE_VERIFICATION")',
          notesEn: 'Age verification (REST: value "AGE_VERIFICATION")',
        },
      ],
    },
    tracking: {
      title: 'Sledování zásilky',
      titleEn: 'Track Shipment',
      description: 'Porovnání struktur pro získání informací o zásilce',
      descriptionEn:
        'Comparison of structures for retrieving shipment information',
      soapOperation: 'GetPackages',
      restEndpoint: 'GET /shipment',
      docUrl: endpointDocUrls['GET /shipment'],
      fields: [
        {
          soapField: 'Filter.PackNumbers[]',
          restField: 'ShipmentNumbers[] (query param)',
          soapType: 'string[]',
          restType: 'string[]',
          soapRequired: false,
          restRequired: false,
          soapLength: 'Max 50 položek',
          restLength: 'Max 50 položek',
          notes: 'Čísla zásilek (v REST jako query parametr)',
          notesEn: 'Shipment numbers (as query parameter in REST)',
        },
        {
          soapField: 'Filter.CustRefs[]',
          restField: 'CustomerReferences[] (query param)',
          soapType: 'string[]',
          restType: 'string[]',
          soapRequired: false,
          restRequired: false,
          soapLength: 'Max 50 položek',
          restLength: 'Max 50 položek',
          notes: 'Reference zákazníka (v REST jako query parametr)',
          notesEn: 'Customer references (as query parameter in REST)',
        },
        {
          soapField: 'Filter.DateFrom',
          restField: 'DateFrom (query param)',
          soapType: 'dateTime',
          restType: 'dateTime', // V REST je to YYYY-MM-DD
          soapRequired: false,
          restRequired: false,
          soapLength: 'N/A',
          restLength: 'N/A',
          notes: 'Počáteční datum rozsahu (v REST jako query parametr)',
          notesEn: 'Start date range (as query parameter in REST)',
        },
        {
          soapField: 'Filter.DateTo',
          restField: 'DateTo (query param)',
          soapType: 'dateTime',
          restType: 'dateTime', // V REST je to YYYY-MM-DD
          soapRequired: false,
          restRequired: false,
          soapLength: 'N/A',
          restLength: 'N/A',
          notes: 'Koncové datum rozsahu (v REST jako query parametr)',
          notesEn: 'End date range (as query parameter in REST)',
        },
        {
          soapField: 'Filter.PackageStates',
          restField: 'ShipmentStates (query param)',
          soapType: 'enum', // SOAP může mít různé implementace (pole stringů)
          restType: 'string[]', // V REST je to pole stringů
          soapRequired: false,
          restRequired: false,
          soapLength: 'N/A',
          restLength: 'N/A',
          notes: 'Stavy zásilek (v REST jako query parametr)',
          notesEn: 'Shipment states (as query parameter in REST)',
        },
        {
          soapField: 'PackNumber (odpověď)',
          restField: 'shipmentNumber (odpověď)',
          soapType: 'string',
          restType: 'string',
          soapRequired: true,
          restRequired: true,
          soapLength: 'Neomezeno',
          restLength: 'Neomezeno',
          notes: 'Číslo zásilky v odpovědi',
          notesEn: 'Shipment number in response',
        },
      ],
    },
    'pickup-order-create': {
      title: 'Vytvoření objednávky svozu (bez příjemce)',
      titleEn: 'Create Pickup Order (without recipient)',
      description: 'Porovnání struktur pro vytvoření objednávky svozu',
      descriptionEn: 'Comparison of structures for creating a pickup order',
      soapOperation: 'CreatePickupOrders',
      restEndpoint: 'POST /order/batch',
      docUrl: endpointDocUrls['POST /order/batch'],
      fields: [
        {
          soapField: 'OrdRefId',
          restField: 'referenceId',
          soapType: 'string',
          restType: 'string',
          soapRequired: false,
          restRequired: true,
          soapLength: 'Neomezeno',
          restLength: '50',
          notes: 'Reference objednávky',
          notesEn: 'Order reference',
        },
        {
          soapField: 'PackProductType',
          restField: 'productType',
          soapType: 'string',
          restType: 'string',
          soapRequired: true,
          restRequired: false, // V REST API je productType v Order volitelný, ale doporučený
          soapLength: 'Neomezeno',
          restLength: '4',
          notes: 'Typ produktu',
          notesEn: 'Product type',
        },
        {
          soapField: 'CountPack',
          restField: 'shipmentCount',
          soapType: 'int',
          restType: 'integer',
          soapRequired: true,
          restRequired: true,
          soapLength: 'N/A',
          restLength: 'N/A',
          notes: 'Počet balíků',
          notesEn: 'Number of packages',
        },
        {
          soapField: 'SendDate',
          restField: 'sendDate',
          soapType: 'dateTime',
          restType: 'string (date)', // YYYY-MM-DD
          soapRequired: true,
          restRequired: true,
          soapLength: 'N/A',
          restLength: 'YYYY-MM-DD',
          notes: 'Datum odeslání/vyzvednutí',
          notesEn: 'Sending/pickup date',
        },
        {
          soapField: 'Note',
          restField: 'note',
          soapType: 'string',
          restType: 'string',
          soapRequired: false,
          restRequired: false,
          soapLength: 'Neomezeno',
          restLength: '300',
          notes: 'Poznámka k objednávce',
          notesEn: 'Order note',
        },
        {
          soapField: 'Email', // Email pro notifikace o objednávce
          restField: 'email', // Email pro notifikace o objednávce
          soapType: 'string',
          restType: 'string',
          soapRequired: false,
          restRequired: false,
          soapLength: 'Neomezeno',
          restLength: '100',
          notes: 'Kontaktní email objednávky',
          notesEn: 'Order contact email',
        },
        {
          soapField: 'Sender.Name',
          restField: 'sender.name',
          soapType: 'string',
          restType: 'string',
          soapRequired: true,
          restRequired: true,
          soapLength: 'Neomezeno',
          restLength: '50',
          notes: 'Jméno odesílatele',
          notesEn: 'Sender name',
        },
        {
          soapField: 'Sender.Street',
          restField: 'sender.street',
          soapType: 'string',
          restType: 'string',
          soapRequired: true,
          restRequired: true,
          soapLength: 'Neomezeno',
          restLength: '60',
          notes: 'Ulice odesílatele',
          notesEn: 'Sender street',
        },
        {
          soapField: 'Sender.City',
          restField: 'sender.city',
          soapType: 'string',
          restType: 'string',
          soapRequired: true,
          restRequired: true,
          soapLength: 'Neomezeno',
          restLength: '50',
          notes: 'Město odesílatele',
          notesEn: 'Sender city',
        },
        {
          soapField: 'Sender.ZipCode',
          restField: 'sender.zipCode',
          soapType: 'string',
          restType: 'string',
          soapRequired: true,
          restRequired: true,
          soapLength: 'Neomezeno',
          restLength: '10',
          notes: 'PSČ odesílatele',
          notesEn: 'Sender ZIP code',
        },
        {
          soapField: 'Sender.Country',
          restField: 'sender.country',
          soapType: 'string',
          restType: 'string',
          soapRequired: true,
          restRequired: true,
          soapLength: 'Neomezeno',
          restLength: '2',
          notes: 'Země odesílatele',
          notesEn: 'Sender country',
        },
        {
          soapField: 'Sender.Phone',
          restField: 'sender.phone',
          soapType: 'string',
          restType: 'string',
          soapRequired: true, // V SOAP mohlo být volitelné, v REST je pro Order.Sender povinné
          restRequired: true,
          soapLength: 'Neomezeno',
          restLength: '50',
          notes: 'Telefon odesílatele',
          notesEn: 'Sender phone',
        },
        {
          soapField: 'Sender.Email', // Email odesílatele
          restField: 'sender.email', // Email odesílatele
          soapType: 'string',
          restType: 'string',
          soapRequired: true, // V SOAP mohlo být volitelné, v REST je pro Order.Sender povinné
          restRequired: true,
          soapLength: 'Neomezeno',
          restLength: '100',
          notes: 'Email odesílatele',
          notesEn: 'Sender email',
        },
      ],
    },
    'order-create': {
      title: 'Vytvoření objednávky přepravy',
      titleEn: 'Create Transport Order',
      description: 'Porovnání struktur pro vytvoření objednávky doručení',
      descriptionEn: 'Comparison of structures for creating a delivery order',
      soapOperation: 'CreateOrders',
      restEndpoint: 'POST /order/batch',
      docUrl: endpointDocUrls['POST /order/batch'],
      fields: [
        // Pole jsou velmi podobná 'pickup-order-create', ale zde je i Recipient
        {
          soapField: 'OrdRefId',
          restField: 'referenceId',
          soapType: 'string',
          restType: 'string',
          soapRequired: false,
          restRequired: true,
          soapLength: 'Neomezeno',
          restLength: '50',
          notes: 'Reference objednávky',
          notesEn: 'Order reference',
        },
        {
          soapField: 'PackProductType',
          restField: 'productType',
          soapType: 'string',
          restType: 'string',
          soapRequired: true,
          restRequired: false,
          soapLength: 'Neomezeno',
          restLength: '4',
          notes: 'Typ produktu',
          notesEn: 'Product type',
        },
        {
          soapField: 'CountPack',
          restField: 'shipmentCount',
          soapType: 'int',
          restType: 'integer',
          soapRequired: true,
          restRequired: true,
          soapLength: 'N/A',
          restLength: 'N/A',
          notes: 'Počet balíků',
          notesEn: 'Number of packages',
        },
        {
          soapField: 'SendDate',
          restField: 'sendDate',
          soapType: 'dateTime',
          restType: 'string (date)',
          soapRequired: true,
          restRequired: true,
          soapLength: 'N/A',
          restLength: 'YYYY-MM-DD',
          notes: 'Datum odeslání/vyzvednutí',
          notesEn: 'Sending/pickup date',
        },
        {
          soapField: 'Note',
          restField: 'note',
          soapType: 'string',
          restType: 'string',
          soapRequired: false,
          restRequired: false,
          soapLength: 'Neomezeno',
          restLength: '300',
          notes: 'Poznámka k objednávce',
          notesEn: 'Order note',
        },
        {
          soapField: 'Email',
          restField: 'email',
          soapType: 'string',
          restType: 'string',
          soapRequired: false,
          restRequired: false,
          soapLength: 'Neomezeno',
          restLength: '100',
          notes: 'Kontaktní email objednávky',
          notesEn: 'Order contact email',
        },
        // Sender fields - stejné jako u pickup-order-create
        {
          soapField: 'Sender.Name',
          restField: 'sender.name',
          soapType: 'string',
          restType: 'string',
          soapRequired: true,
          restRequired: true,
          soapLength: 'Neomezeno',
          restLength: '50',
          notes: 'Jméno odesílatele',
          notesEn: 'Sender name',
        },
        {
          soapField: 'Sender.Street',
          restField: 'sender.street',
          soapType: 'string',
          restType: 'string',
          soapRequired: true,
          restRequired: true,
          soapLength: 'Neomezeno',
          restLength: '60',
          notes: 'Ulice odesílatele',
          notesEn: 'Sender street',
        },
        {
          soapField: 'Sender.City',
          restField: 'sender.city',
          soapType: 'string',
          restType: 'string',
          soapRequired: true,
          restRequired: true,
          soapLength: 'Neomezeno',
          restLength: '50',
          notes: 'Město odesílatele',
          notesEn: 'Sender city',
        },
        {
          soapField: 'Sender.ZipCode',
          restField: 'sender.zipCode',
          soapType: 'string',
          restType: 'string',
          soapRequired: true,
          restRequired: true,
          soapLength: 'Neomezeno',
          restLength: '10',
          notes: 'PSČ odesílatele',
          notesEn: 'Sender ZIP code',
        },
        {
          soapField: 'Sender.Country',
          restField: 'sender.country',
          soapType: 'string',
          restType: 'string',
          soapRequired: true,
          restRequired: true,
          soapLength: 'Neomezeno',
          restLength: '2',
          notes: 'Země odesílatele',
          notesEn: 'Sender country',
        },
        {
          soapField: 'Sender.Phone',
          restField: 'sender.phone',
          soapType: 'string',
          restType: 'string',
          soapRequired: true,
          restRequired: true,
          soapLength: 'Neomezeno',
          restLength: '50',
          notes: 'Telefon odesílatele',
          notesEn: 'Sender phone',
        },
        {
          soapField: 'Sender.Email',
          restField: 'sender.email',
          soapType: 'string',
          restType: 'string',
          soapRequired: true,
          restRequired: true,
          soapLength: 'Neomezeno',
          restLength: '100',
          notes: 'Email odesílatele',
          notesEn: 'Sender email',
        },
        // Recipient fields - specifické pro transport order
        {
          soapField: 'Recipient.Name',
          restField: 'recipient.name',
          soapType: 'string',
          restType: 'string',
          soapRequired: true,
          restRequired: true,
          soapLength: 'Neomezeno',
          restLength: '50',
          notes: 'Jméno příjemce',
          notesEn: 'Recipient name',
        },
        {
          soapField: 'Recipient.Street',
          restField: 'recipient.street',
          soapType: 'string',
          restType: 'string',
          soapRequired: true,
          restRequired: true,
          soapLength: 'Neomezeno',
          restLength: '60',
          notes: 'Ulice příjemce',
          notesEn: 'Recipient street',
        },
        {
          soapField: 'Recipient.City',
          restField: 'recipient.city',
          soapType: 'string',
          restType: 'string',
          soapRequired: true,
          restRequired: true,
          soapLength: 'Neomezeno',
          restLength: '50',
          notes: 'Město příjemce',
          notesEn: 'Recipient city',
        },
        {
          soapField: 'Recipient.ZipCode',
          restField: 'recipient.zipCode',
          soapType: 'string',
          restType: 'string',
          soapRequired: true,
          restRequired: true,
          soapLength: 'Neomezeno',
          restLength: '10',
          notes: 'PSČ příjemce',
          notesEn: 'Recipient ZIP code',
        },
        {
          soapField: 'Recipient.Country',
          restField: 'recipient.country',
          soapType: 'string',
          restType: 'string',
          soapRequired: true,
          restRequired: true,
          soapLength: 'Neomezeno',
          restLength: '2',
          notes: 'Země příjemce',
          notesEn: 'Recipient country',
        },
        {
          soapField: 'Recipient.Phone',
          restField: 'recipient.phone',
          soapType: 'string',
          restType: 'string',
          soapRequired: true,
          restRequired: true,
          soapLength: 'Neomezeno',
          restLength: '50',
          notes: 'Telefon příjemce',
          notesEn: 'Recipient phone',
        },
        {
          soapField: 'Recipient.Email',
          restField: 'recipient.email',
          soapType: 'string',
          restType: 'string',
          soapRequired: true,
          restRequired: true,
          soapLength: 'Neomezeno',
          restLength: '100',
          notes: 'Email příjemce',
          notesEn: 'Recipient email',
        },
      ],
    },
    'accesspoint-get': {
      title: 'Výdejní místa',
      titleEn: 'Access Points',
      description:
        'Porovnání struktur pro získání informací o výdejních místech',
      descriptionEn:
        'Comparison of structures for obtaining information about access points',
      soapOperation: 'GetParcelShops',
      restEndpoint: 'GET /accessPoint',
      docUrl: endpointDocUrls['GET /accessPoint'],
      fields: [
        {
          soapField: 'Filter.Code',
          restField: 'AccessPointCode (query param)',
          soapType: 'string',
          restType: 'string',
          soapRequired: false,
          restRequired: false,
          soapLength: 'Neomezeno',
          restLength: 'Neomezeno',
          notes: 'Kód výdejního místa',
          notesEn: 'Access point code',
        },
        {
          soapField: 'Filter.CountryCode',
          restField: 'CountryCode (query param)',
          soapType: 'string',
          restType: 'string',
          soapRequired: true, // V SOAP bylo povinné
          restRequired: false, // V REST je volitelné
          soapLength: 'Neomezeno',
          restLength: 'Neomezeno',
          notes: 'Kód země',
          notesEn: 'Country code',
        },
        {
          soapField: 'Filter.ZipCode',
          restField: 'ZipCode (query param)',
          soapType: 'string',
          restType: 'string',
          soapRequired: false,
          restRequired: false,
          soapLength: 'Neomezeno',
          restLength: 'Neomezeno',
          notes: 'PSČ',
          notesEn: 'ZIP code',
        },
        {
          soapField: 'Filter.City', // V SOAP nemuselo být podporováno
          restField: 'City (query param)',
          soapType: 'string',
          restType: 'string',
          soapRequired: false,
          restRequired: false,
          soapLength: 'Neomezeno',
          restLength: 'Neomezeno',
          notes: 'Město',
          notesEn: 'City',
        },
        {
          soapField: 'Filter.Street', // V SOAP nemuselo být podporováno
          restField: 'Street (query param)',
          soapType: 'string',
          restType: 'string',
          soapRequired: false,
          restRequired: false,
          soapLength: 'Neomezeno',
          restLength: 'Neomezeno',
          notes: 'Ulice',
          notesEn: 'Street',
        },
        {
          soapField: 'Result.AccessPointCode', // Příklad pole z odpovědi
          restField: 'accessPointCode (odpověď)',
          soapType: 'string',
          restType: 'string',
          soapRequired: true,
          restRequired: true,
          soapLength: 'Neomezeno',
          restLength: 'Neomezeno',
          notes: 'Kód výdejního místa v odpovědi',
          notesEn: 'Access point code in response',
        },
      ],
    },
    'order-get': {
      title: 'Sledování objednávek',
      titleEn: 'Track Orders',
      description: 'Porovnání struktur pro získání informací o objednávkách',
      descriptionEn:
        'Comparison of structures for retrieving order information',
      soapOperation: 'GetOrders',
      restEndpoint: 'GET /order',
      docUrl: endpointDocUrls['GET /order'],
      fields: [
        {
          soapField: 'Filter.OrderNumbers[]',
          restField: 'OrderNumbers[] (query param)',
          soapType: 'string[]',
          restType: 'string[]',
          soapRequired: false,
          restRequired: false,
          soapLength: 'Max 50 položek',
          restLength: 'Max 50 položek',
          notes: 'Čísla objednávek',
          notesEn: 'Order numbers',
        },
        {
          soapField: 'Filter.CustRefs[]',
          restField: 'CustomerReferences[] (query param)',
          soapType: 'string[]',
          restType: 'string[]',
          soapRequired: false,
          restRequired: false,
          soapLength: 'Max 50 položek',
          restLength: 'Max 50 položek',
          notes: 'Reference zákazníka',
          notesEn: 'Customer references',
        },
        {
          soapField: 'Result.OrderNumber', // Příklad pole z odpovědi
          restField: 'orderNumber (odpověď)',
          soapType: 'string',
          restType: 'string',
          soapRequired: true,
          restRequired: true,
          soapLength: 'Neomezeno',
          restLength: 'Neomezeno',
          notes: 'Číslo objednávky v odpovědi',
          notesEn: 'Order number in response',
        },
      ],
    },
    'shipment-cancel': {
      title: 'Zrušení zásilky',
      titleEn: 'Cancel Shipment',
      description: 'Porovnání struktur pro zrušení zásilky',
      descriptionEn: 'Comparison of structures for canceling a shipment',
      soapOperation: 'CancelPackage',
      restEndpoint: 'POST /shipment/{shipmentNumber}/cancel',
      docUrl: endpointDocUrls['POST /shipment/{shipmentNumber}/cancel'],
      fields: [
        {
          soapField: 'PackNumber',
          restField: 'shipmentNumber (v URL)',
          soapType: 'string',
          restType: 'string',
          soapRequired: true,
          restRequired: true,
          soapLength: 'Neomezeno',
          restLength: 'Neomezeno',
          notes: 'Číslo zásilky (v REST API je součástí URL)',
          notesEn: 'Shipment number (part of URL in REST API)',
        },
        {
          soapField: 'Note',
          restField: 'note (body)',
          soapType: 'string',
          restType: 'string',
          soapRequired: false,
          restRequired: false, // V REST API je note v těle volitelný
          soapLength: 'Neomezeno',
          restLength: '300',
          notes: 'Poznámka ke zrušení zásilky (v REST API v těle požadavku)',
          notesEn: 'Cancellation note (in request body in REST API)',
        },
        {
          soapField: 'ResultStatus', // SOAP typicky vrací status v těle
          restField: 'HTTP status kód', // REST používá HTTP status kódy
          soapType: 'string',
          restType: 'integer',
          soapRequired: true,
          restRequired: true,
          soapLength: 'Neomezeno',
          restLength: 'N/A',
          notes:
            'Výsledek operace (v REST API reprezentováno HTTP stavovým kódem)',
          notesEn:
            'Operation result (represented by HTTP status code in REST API)',
        },
        {
          soapField: 'ResultMessage', // SOAP může vracet textovou zprávu
          restField: 'message (v těle odpovědi)', // REST může vracet JSON s detaily
          soapType: 'string',
          restType: 'string',
          soapRequired: false,
          restRequired: false,
          soapLength: 'Neomezeno',
          restLength: 'Neomezeno',
          notes: 'Popis výsledku operace (v REST API v těle odpovědi)',
          notesEn:
            'Operation result description (in response body in REST API)',
        },
      ],
    },
    'shipment-redirect': {
      title: 'Úprava kontaktu zásilky',
      titleEn: 'Edit Shipment Contact',
      description: 'Porovnání struktur pro aktualizaci/přesměrování zásilky',
      descriptionEn:
        'Comparison of structures for updating/redirecting a shipment',
      soapOperation: 'UpdatePackage',
      restEndpoint: 'POST /shipment/{shipmentNumber}/redirect',
      docUrl: endpointDocUrls['POST /shipment/{shipmentNumber}/redirect'],
      fields: [
        {
          soapField: 'PackNumber',
          restField: 'shipmentNumber (v URL)',
          soapType: 'string',
          restType: 'string',
          soapRequired: true,
          restRequired: true,
          soapLength: 'Neomezeno',
          restLength: 'Neomezeno',
          notes: 'Číslo zásilky (v REST API je součástí URL)',
          notesEn: 'Shipment number (part of URL in REST API)',
        },
        {
          soapField: 'N/A', // SOAP UpdatePackage mohl aktualizovat více polí
          restField: 'recipientContact.phone',
          soapType: 'N/A',
          restType: 'string',
          soapRequired: false,
          restRequired: false, // Alespoň jedno z recipientContact musí být vyplněno v REST
          soapLength: 'N/A',
          restLength: '50',
          notes: 'Nový telefon příjemce (REST only)',
          notesEn: 'New recipient phone (REST only)',
        },
        {
          soapField: 'N/A',
          restField: 'recipientContact.email',
          soapType: 'N/A',
          restType: 'string',
          soapRequired: false,
          restRequired: false, // Alespoň jedno z recipientContact musí být vyplněno v REST
          soapLength: 'N/A',
          restLength: '100',
          notes: 'Nový email příjemce (REST only)',
          notesEn: 'New recipient email (REST only)',
        },
        {
          soapField: 'N/A',
          restField: 'note',
          soapType: 'N/A',
          restType: 'string',
          soapRequired: false,
          restRequired: false,
          soapLength: 'N/A',
          restLength: '300',
          notes: 'Poznámka (REST only)',
          notesEn: 'Note (REST only)',
        },
      ],
    },
    'order-cancel': {
      title: 'Zrušení objednávky',
      titleEn: 'Cancel Order',
      description: 'Porovnání struktur pro zrušení objednávky',
      descriptionEn: 'Comparison of structures for canceling an order',
      soapOperation: 'CancelOrder',
      restEndpoint: 'POST /order/cancel',
      docUrl: endpointDocUrls['POST /order/cancel'],
      fields: [
        {
          soapField: 'OrderNumber',
          restField: 'orderNumber (query param)',
          soapType: 'string',
          restType: 'string',
          soapRequired: true, // V SOAP bylo jedno z nich povinné
          restRequired: true, // V REST je orderNumber nebo customerReference povinné
          soapLength: 'Neomezeno',
          restLength: 'Neomezeno',
          notes: 'Číslo objednávky (v REST jako query parametr)',
          notesEn: 'Order number (as query parameter in REST)',
        },
        {
          soapField: 'CustRef',
          restField: 'customerReference (query param)',
          soapType: 'string',
          restType: 'string',
          soapRequired: false, // V SOAP bylo jedno z nich povinné
          restRequired: false, // V REST je orderNumber nebo customerReference povinné
          soapLength: 'Neomezeno',
          restLength: '40',
          notes: 'Reference zákazníka (v REST jako query parametr)',
          notesEn: 'Customer reference (as query parameter in REST)',
        },
        {
          soapField: 'Note',
          restField: 'note (query param)', // Dle swaggeru je note query parametr
          soapType: 'string',
          restType: 'string',
          soapRequired: false,
          restRequired: false,
          soapLength: 'Neomezeno',
          restLength: '300',
          notes: 'Poznámka ke zrušení objednávky (v REST jako query parametr)',
          notesEn: 'Cancellation note (as query parameter in REST)',
        },
        {
          soapField: 'ResultStatus',
          restField: 'HTTP status kód',
          soapType: 'string',
          restType: 'integer',
          soapRequired: true,
          restRequired: true,
          soapLength: 'Neomezeno',
          restLength: 'N/A',
          notes:
            'Výsledek operace (v REST API reprezentováno HTTP stavovým kódem)',
          notesEn:
            'Operation result (represented by HTTP status code in REST API)',
        },
      ],
    },
    'auth-login': {
      title: 'Autentizace',
      titleEn: 'Authentication',
      description: 'Porovnání struktur pro autentizaci',
      descriptionEn: 'Comparison of structures for authentication',
      soapOperation: 'Login',
      restEndpoint: 'OAuth2/JWT autentizace', // Toto není REST endpoint, ale mechanismus
      docUrl: endpointDocUrls['auth-login'] || '',
      fields: [
        {
          soapField: 'Username',
          restField: 'client_id',
          soapType: 'string',
          restType: 'string',
          soapRequired: true,
          restRequired: true,
          soapLength: 'Neomezeno',
          restLength: 'Neomezeno',
          notes: 'Uživatelské jméno / ID klienta',
          notesEn: 'Username / Client ID',
        },
        {
          soapField: 'Password',
          restField: 'client_secret',
          soapType: 'string',
          restType: 'string',
          soapRequired: true,
          restRequired: true,
          soapLength: 'Neomezeno',
          restLength: 'Neomezeno',
          notes: 'Heslo / Tajný klíč klienta',
          notesEn: 'Password / Client secret',
        },
        {
          soapField: 'AuthToken (odpověď)',
          restField: 'access_token (odpověď)',
          soapType: 'string',
          restType: 'string',
          soapRequired: true,
          restRequired: true,
          soapLength: 'Neomezeno',
          restLength: 'Neomezeno',
          notes: 'Autentizační token v odpovědi',
          notesEn: 'Authentication token in response',
        },
      ],
    },
  },
  generalDifferences: [
    {
      category: 'Autentizace',
      categoryEn: 'Authentication',
      soapApproach:
        'Vlastní autentizační model s přihlašovacími údaji v Auth elementu:',
      soapApproachEn:
        'Custom authentication model with login credentials in Auth element:',
      soapExample:
        '<Auth>\n  <UserName>username</UserName>\n  <Password>password</Password>\n  \n  <AuthToken>token</AuthToken>\n</Auth>',
      restApproach: 'Standardní OAuth2 nebo JWT autentizace:',
      restApproachEn: 'Standard OAuth2 or JWT authentication:',
      restExample: 'Authorization: Bearer {token}',
      importance: 'high',
    },
    {
      category: 'Konvence pojmenování',
      categoryEn: 'Naming conventions',
      soapApproach: 'PascalCase konvence',
      soapApproachEn: 'PascalCase convention',
      soapExample: 'PackNumber, RecipientName',
      restApproach: 'camelCase konvence',
      restApproachEn: 'camelCase convention',
      restExample: 'shipmentNumber, recipientName',
      importance: 'medium',
    },
    {
      category: 'Formát požadavků a odpovědí',
      categoryEn: 'Request and response format',
      soapApproach: 'XML struktura s SOAP obálkou',
      soapApproachEn: 'XML structure with SOAP envelope',
      soapExample: '<soapenv:Envelope>...</soapenv:Envelope>',
      restApproach: 'JSON struktura',
      restApproachEn: 'JSON structure',
      restExample: '{ "shipments": [...] }',
      importance: 'high',
    },
    {
      category: 'Komunikační model',
      categoryEn: 'Communication model',
      soapApproach: 'RPC model s operacemi',
      soapApproachEn: 'RPC model with operations',
      soapExample: 'CreatePackages',
      restApproach: 'Resourceový model s HTTP metodami',
      restApproachEn: 'Resource model with HTTP methods',
      restExample: 'POST /shipment/batch',
      importance: 'high',
    },
    {
      category: 'Zpracování chyb',
      categoryEn: 'Error handling',
      soapApproach: 'SOAP Fault struktury',
      soapApproachEn: 'SOAP Fault structures',
      soapExample: '<soapenv:Fault>...</soapenv:Fault>',
      restApproach: 'HTTP stavové kódy s JSON chybovými objekty',
      restApproachEn: 'HTTP status codes with JSON error objects',
      restExample: '{ "status": 400, "detail": "...", "errors": {...} }',
      importance: 'high',
    },
    {
      category: 'Limity délky polí',
      categoryEn: 'Field length limits',
      soapApproach: 'Většinou bez explicitního omezení',
      soapApproachEn: 'Mostly without explicit limitations',
      soapExample: 'Note, Street',
      restApproach: 'Explicitní definice maximálních délek',
      restApproachEn: 'Explicit definition of maximum lengths',
      restExample: 'note: max 300, street: max 60',
      importance: 'high',
    },
    {
      category: 'Stránkování',
      categoryEn: 'Pagination',
      soapApproach: 'Stránkování pomocí komplexních filtrů',
      soapApproachEn: 'Pagination using complex filters',
      soapExample: 'Filter struktura',
      restApproach: 'Standardní stránkování pomocí Limit a Offset',
      restApproachEn: 'Standard pagination using Limit and Offset',
      restExample: '?Limit=100&Offset=0 s hlavičkami X-Paging-*',
      importance: 'medium',
    },
    {
      category: 'Dokumentace',
      categoryEn: 'Documentation',
      soapApproach: 'WSDL soubor s XML schématem',
      soapApproachEn: 'WSDL file with XML schema',
      soapExample: '<wsdl:definitions>...</wsdl:definitions>',
      restApproach: 'OpenAPI (Swagger) specifikace',
      restApproachEn: 'OpenAPI (Swagger) specification',
      restExample: '{ "openapi": "3.0.1", ... }',
      importance: 'medium',
    },
  ],
  apiExamples: [
    {
      id: 'multi-package-shipment',
      title: 'Více zásilek s individuálními váhami a čísly',
      titleEn: 'Multiple shipments with individual weights and numbers',
      description:
        'Komplexní příklad se sadou zásilek, kde každá zásilka má vlastní váhu a vlastní jedinečná externí čísla',
      descriptionEn:
        'Complex example with a set of shipments, where each shipment has its own weight and unique external numbers',
      endpoint: '/shipment/batch',
      method: 'POST',
      requestBody: `{
  "returnChannel": {
    "type": "Email",
    "address": "jfnukal@elinkx.cz"
  },
  "labelSettings": {
    "format": "ZPL",
    "dpi": 300,
    "completeLabelSettings": {
      "isCompleteLabelRequested": true,
      "pageSize": "A4",
      "position": 1
    }
  },
  "shipments": [
    {
      "referenceId": "Reference03",
      "productType": "CONN",
      "note": "Poznamka",
      "integratorId": "422609",
      "shipmentSet": {
        "numberOfShipments": 3,
        "shipmentSetItems": [
          {
            "weighedShipmentInfo": {
              "weight": 1.5
            },
            "externalNumbers": [
              {
                "externalNumber": "Ext_Box1_CUST",
                "code": "CUST"
              }
            ]
          },
          {
            "weighedShipmentInfo": {
              "weight": 3.2
            },
            "externalNumbers": [
              {
                "externalNumber": "Ext_Box2_CUST",
                "code": "CUST"
              },
              {
                "externalNumber": "B2CO_000222",
                "code": "B2CO"
              }
            ]
          },
          {
            "weighedShipmentInfo": {
              "weight": 5.8
            },
            "externalNumbers": [
              {
                "externalNumber": "Ext_Box3_CUST",
                "code": "CUST"
              },
              {
                "externalNumber": "B2CO_000333",
                "code": "B2CO"
              },
              {
                "externalNumber": "ESHOP_999",
                "code": "VARS"
              }
            ]
          }
        ]
      },
      "sender": {
        "name": "Name sender",
        "street": "Street sender 99",
        "city": "Olomouc",
        "zipCode": "77200",
        "country": "CZ",
        "contact": "Contact sender",
        "phone": "+420777999888",
        "email": "test@test.cz"
      },
      "recipient": {
        "name": "Recipient Gunter",
        "street": "Janosika 22",
        "city": "Zilina",
        "zipCode": "01001",
        "country": "SK",
        "contact": "Recipient Kontakte",
        "phone": "+49777888999",
        "email": "recipient@example.sk"
      },
      "insurance": {
        "insurancePrice": "156000",
        "insuranceCurrency": "CZK"
      },
      "dormant": {
        "note": "Poznamka return",
        "depot": "07",
        "recipient": {
          "name": "Name return",
          "street": "Street return 99",
          "city": "Olomouc",
          "zipCode": "77200",
          "country": "CZ",
          "contact": "Contact return",
          "phone": "+420777999888",
          "email": "test@test.cz"
        },
        "services": [
          {
            "code": "PUBC"
          }
        ]
      }
    }
  ]
}`,
      complexity: 'complex',
      category: 'Zásilky',
      categoryEn: 'Shipments',
    },
    {
      id: 'individual-insurance',
      title: 'Zásilky s individuálním pojištěním',
      titleEn: 'Shipments with individual insurance',
      description:
        'Příklad sady zásilek, kde každá zásilka má vlastní váhu a vlastní pojistnou částku',
      descriptionEn:
        'Example of a set of shipments where each shipment has its own weight and insurance amount',
      endpoint: '/shipment/batch',
      method: 'POST',
      requestBody: `{
  "returnChannel": {
    "type": "Email",
    "address": "mkaisersat@ppl.cz"
  },
  "labelSettings": {
    "format": "Pdf",
    "dpi": 600,
    "completeLabelSettings": {
      "isCompleteLabelRequested": true,
      "pageSize": "A4",
      "position": 2
    }
  },
  "shipments": [
    {
      "referenceId": "123456a4",
      "productType": "CONN",
      "note": "poznamka",
      "depot": "07",
      "shipmentSet": {
        "numberOfShipments": 2,
        "shipmentSetItems": [
          {
            "weighedShipmentInfo": {
              "weight": 1
            },
            "insurance": {
              "insurancePrice": 100000.01,
              "insuranceCurrency": "CZK"
            }
          },
          {
            "weighedShipmentInfo": {
              "weight": 2
            },
            "insurance": {
              "insurancePrice": 200000,
              "insuranceCurrency": "CZK"
            }
          }
        ]
      },
      "sender": {
        "name": "Pavel Peknica",
        "street": "Vysni Lhoty 222",
        "city": "Dobrá",
        "zipCode": "73951",
        "country": "CZ",
        "phone": "123654789",
        "email": "pavel@peca.cz"
      },
      "recipient": {
        "name": "Lukáš Richter",
        "street": "Nové Dvory-Podhůří 3844",
        "city": "Berlin",
        "zipCode": "10112",
        "country": "DE",
        "phone": "369852147",
        "email": "pavel@peca.cz"
      }
    }
  ]
}`,
      complexity: 'complex',
      category: 'Zásilky',
      categoryEn: 'Shipments',
    },
  ],
  faqItems: [
    {
      id: 'auth-how',
      question: 'Jak se přihlásit k API?',
      questionEn: 'How to authenticate to the API?',
      answer:
        'Pro přihlášení k CPL API je potřeba použít OAuth2 autentizaci. Volání probíhá pomocí client_id a client_secret, které získáte od PPL. Autentizace se provádí na endpointu /login/getAccessToken a vrátí vám JWT token, který následně používáte v hlavičce Authorization: Bearer {token} pro všechna další API volání.',
      answerEn:
        'To log in to CPL API, you need to use OAuth2 authentication. The call is performed using client_id and client_secret, which you can obtain from PPL. Authentication is performed at the /login/getAccessToken endpoint and returns a JWT token, which you then use in the Authorization: Bearer {token} header for all subsequent API calls.',
      category: 'Autentizace',
      categoryEn: 'Authentication',
    },
    {
      id: 'shipment-create',
      question: 'Jak vytvořit zásilku?',
      questionEn: 'How to create a shipment?',
      answer:
        'Pro vytvoření zásilky použijte metodu POST na endpoint /shipment/batch. V požadavku musíte specifikovat informace o odesílateli, příjemci, typu produktu, počtu balíků a dalších parametrech zásilky. Po úspěšném vytvoření získáte identifikátor dávky, pomocí kterého můžete stáhnout štítky nebo zjistit stav importu zásilky.',
      answerEn:
        'To create a shipment, use the POST method on the /shipment/batch endpoint. In the request, you must specify information about the sender, recipient, product type, number of packages, and other shipment parameters. After successful creation, you will receive a batch identifier that you can use to download labels or check the status of the shipment import.',
      category: 'Zásilky',
      categoryEn: 'Shipments',
    },
  ],
};
